version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - backend
    networks:
      - dockerwebsite_app-network

  backend:
    container_name: backend
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - database
    volumes:
      - /api/.env:/app/.env
    networks:
      - dockerwebsite_app-network

  database:
    container_name: database
    image: postgres:14.1-alpine
    ports:
      - 5432:5432
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - dockerwebsite_app-network

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./webapp/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - dockerwebsite_app-network

networks:
  dockerwebsite_app-network:
    name: dockerwebsite_app-network

volumes:
  dbdata: